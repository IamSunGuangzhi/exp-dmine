package ed.inf.discovery;

import java.util.LinkedList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import ed.inf.discovery.auxiliary.SimpleEdge;
import ed.inf.grape.graph.Partition;
import ed.inf.grape.util.Compute;
import ed.inf.grape.util.Dev;
import ed.inf.grape.util.KV;

public class DiscoveryTask {

	private int partitionID;

	/** step count */
	private int superstep;

	/** messages generated by this step */
	private List<UpMessage> generatedMessages;

	static Logger log = LogManager.getLogger(DiscoveryTask.class);

	public DiscoveryTask(int partitionID) {
		this.partitionID = partitionID;
		this.generatedMessages = new LinkedList<UpMessage>();
	}

	public int getPartitionID() {
		return partitionID;
	}

	public void startStep(Partition partition) {

		long start = System.currentTimeMillis();

		Pattern initPattern = new Pattern(this.partitionID);

		initPattern.initialXYEdge(KV.QUERY_X_LABEL, KV.QUERY_Y_LABEL);

		partition.initCount(KV.QUERY_X_LABEL, KV.QUERY_Y_LABEL,
				Compute.getEdgeType(KV.QUERY_Y_LABEL));

		log.debug("init count using " + (System.currentTimeMillis() - start)
				+ "ms.");

		log.debug(partition.getCountInfo());
		log.debug(Dev.currentRuntimeState());

		this.growFirstEdge(partition, initPattern);
	}

	public void continuesStep(Partition partition, List<DownMessage> messages) {

	}

	private void growFirstEdge(Partition partition, Pattern origin) {

		log.debug("begin grows.");

		long start = System.currentTimeMillis();

		for (SimpleEdge edge : partition.getFreqEdge().keySet()) {

			Pattern newPattern = new Pattern(this.partitionID, origin);

			newPattern.expend1Node1Edge(edge.tnode, edge.tnode);

			UpMessage message = new UpMessage(newPattern, 1.0, this.partitionID);
			generatedMessages.add(message);
		}

		log.debug("grows first edge using "
				+ (System.currentTimeMillis() - start) + "ms.");
		log.debug(Dev.currentRuntimeState());
	}

	public void prepareForNextCompute() {
		// TODO: reset messages
	}

	public List<UpMessage> getMessages() {
		return this.generatedMessages;
	}
}
